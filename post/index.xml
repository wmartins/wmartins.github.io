<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on wwwhmartins</title>
    <link>https://wmartins.github.io/post/</link>
    <description>Recent content in Posts on wwwhmartins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 22:53:40 -0300</lastBuildDate>
    
	<atom:link href="https://wmartins.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A deep dive into children in Vue</title>
      <link>https://wmartins.github.io/2019/05/a-deep-dive-into-children-in-vue/</link>
      <pubDate>Thu, 16 May 2019 22:53:40 -0300</pubDate>
      
      <guid>https://wmartins.github.io/2019/05/a-deep-dive-into-children-in-vue/</guid>
      <description>I got myself inspired by Max Stoiber in his A deep dive into children in React to create this post about Vue children. So, credits on the title to him. If you&amp;rsquo;re into React, check out his post, it has lots of nice information on React children.
Motivation I have started working with Vue a few months ago and it has been really nice. After working with React for some years, it&amp;rsquo;s nice to experience something new.</description>
    </item>
    
    <item>
      <title>The Lost Callback</title>
      <link>https://wmartins.github.io/2019/01/the-lost-callback/</link>
      <pubDate>Thu, 03 Jan 2019 00:19:19 -0200</pubDate>
      
      <guid>https://wmartins.github.io/2019/01/the-lost-callback/</guid>
      <description>In the past few days I was investigating a really tricky issue in one of our React components. I decided to cover it here because I&amp;rsquo;ve found the problem interesting and, surprisingly, easy to fix after finding out the root cause.
The Component First, it&amp;rsquo;s nice to outline a little bit about the component itself. It&amp;rsquo;s a really simple react component that does the following things:
 When the component mounts, inserts a &amp;lt;script&amp;gt; tag on the page to load an external dependency When this script is loaded, instantiate a new instance of this external dependency Renders correctly both when script is loaded and when it isn&amp;rsquo;t When removing the component, destroys the external dependency instance  So, that said, lets jump into the parts that make it happen.</description>
    </item>
    
    <item>
      <title>What I Learned by Early Adopting Docker</title>
      <link>https://wmartins.github.io/2017/11/what-i-learned-by-early-adopting-docker/</link>
      <pubDate>Tue, 28 Nov 2017 21:09:43 -0300</pubDate>
      
      <guid>https://wmartins.github.io/2017/11/what-i-learned-by-early-adopting-docker/</guid>
      <description>The year is 2015, I started working as software engineer in this new team that was focused on delivering new experiences with top notch technology. This was also an year when microservices began to be a thing, and, with that, Docker being the de facto containerization tool.
At this time, Docker was on release 1.6 or 1.7, and few people were using it to deploy applications. Lots of those were POCs, and most of the blog posts included some &amp;ldquo;strange&amp;rdquo; things (not the Netflix title) there, like the fig command (which became docker-compose), and lots of lines in yml code.</description>
    </item>
    
    <item>
      <title>Creating a Monitoring Stack With Docker Swarm, Grafana, InfluxDB and Telegraf</title>
      <link>https://wmartins.github.io/2017/10/creating-a-monitoring-stack-with-docker-swarm-grafana-influxdb-and-telegraf/</link>
      <pubDate>Tue, 03 Oct 2017 21:00:00 -0300</pubDate>
      
      <guid>https://wmartins.github.io/2017/10/creating-a-monitoring-stack-with-docker-swarm-grafana-influxdb-and-telegraf/</guid>
      <description>Monitoring your infrastructure is one of the most important aspects of successfully launching a product. It&amp;rsquo;s really important to know when your machines/applications are under heavy load. Moreover, if it happens, you would want to quickly know what&amp;rsquo;s going on and what you can do to recover your infrastructure.
This blog post explains how you can configure setup a monitoring stack easily using Docker Swarm, Grafana, InfluxDB and Telegraf.</description>
    </item>
    
  </channel>
</rss>